<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【Pirrow】学习笔记-FL studio制作Phonk时对于cow bell音色的调整</title>
      <link href="/posts/f9d6b6fc.html"/>
      <url>/posts/f9d6b6fc.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本篇文章主要学习在Phonk制作时，通过对cow bell的处理,实现梦幻，失真，富有节奏的氛围。且未使用任何第三方插件<br>先写总结：<br>1.EQ提升高频<br>2.wave营造失真感<br>3.reever和delay营造迷幻感<br>4.弹跳</p><p><h1 class="custom-title">一、校准音高</h1><br>1.准备一份cowbell采样<br>2.检查测音高<br>3.右键矫正音高</p><p>二、混响<br>使用到的效果器<br>1.EQ2<br>2.wave shaper<br>3.reeverb2<br>4.delay3<br>5.love philter<br>（待完成）</p><video width="100%" height="415" controls>   <source src="https://files.catbox.moe/56ulij.mp4" type="video/mp4"></video>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【Pirrow】一些作品集</title>
      <link href="/posts/6b4d166f.html"/>
      <url>/posts/6b4d166f.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 class="custom-title">一、环状高频磁场激发约束低压氙气进入等离子态</h1><meta name=referrer content=no-referrer><video width="100%" height="415" controls>   <source src="https://photovideo.photo.qq.com/1075_0bc3kq4rihaa7iaixmas4btdgvaecr4qabca.f0.mp4?dis_k=ac136783fc82b070c1ab22e3bda39c23&dis_t=1739715664&vuin=473501741&owner=NDczNTAxNzQx" type="video/mp4"></video><h1 class="custom-title">二、基于ESP32，MPU6050的小型透明显示器设计</h1><meta name=referrer content=no-referrer><video width="100%" height="415" controls>   <source src="https://photovideo.photo.qq.com/1075_0bc3oi6awhaf74aix2o4wfstm4qebnpqkg2a.f0.mp4?dis_k=69f5c68c212995b337ff2f50f258fe94&dis_t=1739718827&vuin=473501741&owner=NDczNTAxNzQx" type="video/mp4"></video><img src=https://s2.loli.net/2025/02/16/4n1McN3aQqJRIGb.jpg><h1 class="custom-title">三、FL studio音乐制作</h1><meta name=referrer content=no-referrer><video width="100%" height="415" controls>   <source src="https://photovideo.photo.qq.com/1074_0bc33u4sqhaaomannkmhurtdfxiefdyaaoca.f0.mp4?dis_k=d27c5998b717f9dd587fddb0e6252eae&dis_t=1739719130&vuin=473501741&owner=NDczNTAxNzQx" type="video/mp4"></video><h1 class="custom-title">四、Blender动画</h1><video width="100%" height="415" controls>   <source src="https://photovideo.photo.qq.com/1074_0bc3sex6yhawlyaj3im54rqcjeie5s6bn7ca.f0.mp4?dis_k=b016aa78205dc904033adc12bbe0e75c&dis_t=1739719223&vuin=473501741&owner=NDczNTAxNzQx" type="video/mp4"></video><img src=https://s2.loli.net/2025/02/16/Gds8mPqnyuKCtM5.jpg><img src=https://s2.loli.net/2025/02/16/mAdpFYgfHxUbq1G.jpg><h1 class="custom-title">五、Matlab中使用simulink实现SVPWM仿真</h1><h1 class="custom-title">这个找不着工程文件了55</h1><p><h1 class="custom-title">六、ABB路径示教</h1></p><video width="100%" height="415" controls>   <source src="/vedio/wxj.mp4" type="video/mp4"></video>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【Pirrow】开源！基于python的爬虫，自动化爬图+命名</title>
      <link href="/posts/undefined.html"/>
      <url>/posts/undefined.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><h1 class="custom-title">一、项目简介</h1><br>哈哈哈哈哈，最开始是我前女友给我提的一个需求，她的学姐要让她一张一张找昆虫图片，然后一个一个按照序列名称命名。她老跑过来和我抱怨说这玩意好烦，后面就想干脆给她写个爬虫自动化吧，不然一个一个找也太可怜了。当然这里要非常感谢我的好同学zz啦</p><p><h1 class="custom-title">二、使用方法</h1><br>1.将你需要命名和搜索的图片名字准备好在txt文件里<br>2.确保文件夹里有以下的文件夹，image是输出图片的文件夹<br><img src=https://s2.loli.net/2025/02/16/LxNeA3XC5IDTtpM.png><br>3.vscode打开程序运行即可，最终图片会导入到image中</p><p><h1 class="custom-title">三、源码</h1><br><span class="custom-title">开源链接</span>：<a href="https://github.com/Sigma-Pirrow/picture-crawling-and-rename-program">https://github.com/Sigma-Pirrow/picture-crawling-and-rename-program</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> urllib3.util.retry <span class="keyword">import</span> Retry</span><br><span class="line"><span class="keyword">from</span> requests.adapters <span class="keyword">import</span> HTTPAdapter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保有一个文件夹来存储图片</span></span><br><span class="line">os.makedirs(<span class="string">&#x27;images&#x27;</span>, exist_ok=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文本文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;insects.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    lines = file.readlines()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置重试策略</span></span><br><span class="line">retry_strategy = Retry(</span><br><span class="line">    total=<span class="number">3</span>,  <span class="comment"># 总共重试3次</span></span><br><span class="line">    backoff_factor=<span class="number">1</span>,  <span class="comment"># 重试间隔时间因子</span></span><br><span class="line">    status_forcelist=[<span class="number">429</span>, <span class="number">500</span>, <span class="number">502</span>, <span class="number">503</span>, <span class="number">504</span>],  <span class="comment"># 需要重试的状态码</span></span><br><span class="line">    allowed_methods=[<span class="string">&quot;HEAD&quot;</span>, <span class="string">&quot;GET&quot;</span>, <span class="string">&quot;OPTIONS&quot;</span>]  <span class="comment"># 需要重试的请求方法</span></span><br><span class="line">)</span><br><span class="line">adapter = HTTPAdapter(max_retries=retry_strategy)</span><br><span class="line">http = requests.Session()</span><br><span class="line">http.mount(<span class="string">&quot;https://&quot;</span>, adapter)</span><br><span class="line">http.mount(<span class="string">&quot;http://&quot;</span>, adapter)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">    <span class="comment"># 提取中文部分</span></span><br><span class="line">    chinese_name = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x: <span class="string">u&#x27;\u4e00&#x27;</span> &lt;= x &lt;= <span class="string">u&#x27;\u9fff&#x27;</span>, line))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 使用中文名进行搜索</span></span><br><span class="line">    search_url = <span class="string">f&quot;https://cn.bing.com/images/async?q=<span class="subst">&#123;chinese_name&#125;</span>&quot;</span>  <span class="comment"># 替换为实际的搜索引擎URL</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = http.get(search_url)</span><br><span class="line">        response.raise_for_status()  <span class="comment"># 检查请求是否成功</span></span><br><span class="line">    <span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Failed to fetch search results for <span class="subst">&#123;chinese_name&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 找到前五张图片的URL（具体选择器需要根据实际网页结构调整）</span></span><br><span class="line">    image_tags = soup.find_all(<span class="string">&#x27;a&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;iusc&#x27;</span>&#125;, limit=<span class="number">3</span>)</span><br><span class="line">    image_urls = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> tag <span class="keyword">in</span> image_tags:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            m_data = json.loads(tag[<span class="string">&#x27;m&#x27;</span>])</span><br><span class="line">            image_url = m_data.get(<span class="string">&#x27;murl&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> image_url <span class="keyword">and</span> <span class="keyword">not</span> re.<span class="keyword">match</span>(<span class="string">r&#x27;^data:&#x27;</span>, image_url):</span><br><span class="line">                image_urls.append(image_url)</span><br><span class="line">        <span class="keyword">except</span> (KeyError, json.JSONDecodeError):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> image_urls:</span><br><span class="line">        best_image_url = <span class="literal">None</span></span><br><span class="line">        best_image_pixels = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 尝试下载图片，直到成功或所有图片都尝试完毕</span></span><br><span class="line">        <span class="keyword">for</span> selected_image_url <span class="keyword">in</span> image_urls:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                img_response = http.get(selected_image_url)</span><br><span class="line">                img_response.raise_for_status()  <span class="comment"># 检查请求是否成功</span></span><br><span class="line">            <span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;Failed to fetch image from URL: <span class="subst">&#123;selected_image_url&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                img = Image.<span class="built_in">open</span>(BytesIO(img_response.content))</span><br><span class="line">                <span class="comment"># 如果图片是RGBA模式，转换为RGB模式</span></span><br><span class="line">                <span class="keyword">if</span> img.mode == <span class="string">&#x27;RGBA&#x27;</span>:</span><br><span class="line">                    img = img.convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 计算总像素</span></span><br><span class="line">                img_pixels = img.width * img.height</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 更新最佳图片</span></span><br><span class="line">                <span class="keyword">if</span> img_pixels &gt; best_image_pixels:</span><br><span class="line">                    best_image_url = selected_image_url</span><br><span class="line">                    best_image_pixels = img_pixels</span><br><span class="line">                    best_img = img</span><br><span class="line">            <span class="keyword">except</span> IOError:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;Failed to open image from URL: <span class="subst">&#123;selected_image_url&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> best_image_url:</span><br><span class="line">            <span class="comment"># 保存最佳图片</span></span><br><span class="line">            img_name = line.strip() + <span class="string">&#x27;.jpg&#x27;</span></span><br><span class="line">            best_img.save(os.path.join(<span class="string">&#x27;images&#x27;</span>, img_name))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Saved <span class="subst">&#123;img_name&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;No valid image URL found for <span class="subst">&#123;chinese_name&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;No valid image URL found for <span class="subst">&#123;chinese_name&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【Pirrow】开源！基于HK的快速单词查询插件</title>
      <link href="/posts/ebc1c88e.html"/>
      <url>/posts/ebc1c88e.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><h1 class="custom-title">一、HK简单介绍</h1><br>AutoHotkey（简称AHK）是一款功能强大的自动化脚本语言，主要用于Windows系统。它可以用于创建快捷键（Hotkeys）、自动化任务、文本替换、窗口管理等。它可以帮助我们提高工作效率。下面是其可以实现的具体功能</p><p>1.快捷键与快捷方式：可以为键盘、鼠标、游戏手柄等创建快捷键，提高工作效率。<br>2.自动化操作：模拟键盘输入、鼠标点击、窗口管理等，实现重复性任务的自动化。<br>3.文本替换：输入一些字符自动扩展为完整的句子或句子，适合输入大量文本的用户。<br>4.GUI开发：可以创建简单的图形界面（GUI），如工具箱、弹窗提醒等。<br>轻量级且易学：语法简单，适合初学者，同时也能编写复杂的自动化脚本。</p><p><h1 class="custom-title">二、功能介绍</h1><br>本篇文章主要博主自己编写的一段HK程序，方便学习进行英文联想学习<br>在选中文本后可实现：<br>1.shift+a搜索关联图片<br>2.shift+t翻译单词<br>3.ctrl+alt+space固定当前窗p口在最上层</p><p><h1 class="custom-title">三、源码</h1><br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">made by Pirrow</span></span><br><span class="line"><span class="comment">welcome to my website:</span></span><br><span class="line"><span class="comment">https://sigma-pirrow.github.io/</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title">^!SPACE::</span>  </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">    Winset,</span> Alwaysontop, , A</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">+T::</span></span><br><span class="line">&#123;</span><br><span class="line">    __UrlA:=<span class="string">&quot;https://dict.youdao.com/result?word=&quot;</span></span><br><span class="line">    __UrlB:=<span class="string">&quot;&amp;lang=en&quot;</span></span><br><span class="line">    __WebsiteName:=<span class="string">&quot;&quot;</span></span><br><span class="line">    clipboard_save:= <span class="built_in">clipboard</span></span><br><span class="line">    <span class="built_in">clipboard</span>:=<span class="string">&quot;&quot;</span></span><br><span class="line">    Send ^&#123;c&#125;</span><br><span class="line">    Sleep <span class="number">100</span></span><br><span class="line">    __keyWord:= <span class="built_in">clipboard</span></span><br><span class="line">    <span class="built_in">Clipboard</span> = <span class="variable">%clipboard_save%</span></span><br><span class="line">    if <span class="literal">not</span> __keyWord &#123;</span><br><span class="line">        if <span class="literal">not</span> __WebsiteName&#123;</span><br><span class="line">            __WebsiteName:=__UrlA</span><br><span class="line">        &#125;</span><br><span class="line"><span class="built_in">        InputBox,</span> __keyWord,搜索关键字,<span class="variable">%__WebsiteName%</span>,,,<span class="number">150</span></span><br><span class="line">    &#125;</span><br><span class="line">    if (<span class="built_in">ErrorLevel</span>=<span class="number">0</span> <span class="literal">and</span> __keyWord!=<span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">        VarSetCapacity(__Var, StrPut(__keyWord, <span class="string">&quot;UTF-8&quot;</span>), <span class="number">0</span>)</span><br><span class="line">        StrPut(__keyWord, &amp;__Var, <span class="string">&quot;UTF-8&quot;</span>)</span><br><span class="line">        f := <span class="built_in">A_FormatInteger</span></span><br><span class="line"><span class="built_in">        SetFormat,</span> IntegerFast, H</span><br><span class="line">        While __Code := NumGet(__Var, <span class="built_in">A_Index</span> - <span class="number">1</span>, <span class="string">&quot;UChar&quot;</span>)</span><br><span class="line">            If (__Code &gt;= <span class="number">0</span>x30 &amp;&amp; __Code &lt;= <span class="number">0</span>x39 <span class="comment">; 0-9</span></span><br><span class="line">                || __Code &gt;= <span class="number">0</span>x41 &amp;&amp; __Code &lt;= <span class="number">0</span>x5A <span class="comment">; A-Z</span></span><br><span class="line">                || __Code &gt;= <span class="number">0</span>x61 &amp;&amp; __Code &lt;= <span class="number">0</span>x7A) <span class="comment">; a-z</span></span><br><span class="line">                __Res .= Chr(__Code)</span><br><span class="line">            Else</span><br><span class="line">                __Res .= <span class="string">&quot;%&quot;</span> . SubStr(__Code + <span class="number">0</span>x100, -<span class="number">1</span>)</span><br><span class="line"><span class="built_in">        SetFormat,</span> IntegerFast, <span class="variable">%f%</span></span><br><span class="line"><span class="built_in">        Run %</span>__UrlA%<span class="variable">%__Res%</span><span class="variable">%__UrlB%</span></span><br><span class="line">        __Res:=<span class="string">&quot;&quot;</span></span><br><span class="line">        __Var:=<span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    _keyWord:=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">Return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">+A::</span></span><br><span class="line">&#123;</span><br><span class="line">    __UrlA:=<span class="string">&quot;https://cn.bing.com/images/search?q=&quot;</span></span><br><span class="line">    __UrlB:=<span class="string">&quot;&amp;qs=n&amp;form=QBIR&amp;sp=-1&amp;lq=0&amp;pq=tuna&amp;sc=10-4&amp;cvid=78EEC2FA15E44A6B8B130E90EE2064B9&amp;ghsh=0&amp;ghacc=0&amp;first=1&quot;</span></span><br><span class="line">       __WebsiteName:=<span class="string">&quot;&quot;</span></span><br><span class="line">    clipboard_save:= <span class="built_in">clipboard</span></span><br><span class="line">    <span class="built_in">clipboard</span>:=<span class="string">&quot;&quot;</span></span><br><span class="line">    Send ^&#123;c&#125;</span><br><span class="line">    Sleep <span class="number">100</span></span><br><span class="line">    __keyWord:= <span class="built_in">clipboard</span></span><br><span class="line">    <span class="built_in">Clipboard</span> = <span class="variable">%clipboard_save%</span></span><br><span class="line">    if <span class="literal">not</span> __keyWord &#123;</span><br><span class="line">        if <span class="literal">not</span> __WebsiteName&#123;</span><br><span class="line">            __WebsiteName:=__UrlA</span><br><span class="line">        &#125;</span><br><span class="line"><span class="built_in">        InputBox,</span> __keyWord,搜索关键字,<span class="variable">%__WebsiteName%</span>,,,<span class="number">150</span></span><br><span class="line">    &#125;</span><br><span class="line">    if (<span class="built_in">ErrorLevel</span>=<span class="number">0</span> <span class="literal">and</span> __keyWord!=<span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">        VarSetCapacity(__Var, StrPut(__keyWord, <span class="string">&quot;UTF-8&quot;</span>), <span class="number">0</span>)</span><br><span class="line">        StrPut(__keyWord, &amp;__Var, <span class="string">&quot;UTF-8&quot;</span>)</span><br><span class="line">        f := <span class="built_in">A_FormatInteger</span></span><br><span class="line"><span class="built_in">        SetFormat,</span> IntegerFast, H</span><br><span class="line">        While __Code := NumGet(__Var, <span class="built_in">A_Index</span> - <span class="number">1</span>, <span class="string">&quot;UChar&quot;</span>)</span><br><span class="line">            If (__Code &gt;= <span class="number">0</span>x30 &amp;&amp; __Code &lt;= <span class="number">0</span>x39 <span class="comment">; 0-9</span></span><br><span class="line">                || __Code &gt;= <span class="number">0</span>x41 &amp;&amp; __Code &lt;= <span class="number">0</span>x5A <span class="comment">; A-Z</span></span><br><span class="line">                || __Code &gt;= <span class="number">0</span>x61 &amp;&amp; __Code &lt;= <span class="number">0</span>x7A) <span class="comment">; a-z</span></span><br><span class="line">                __Res .= Chr(__Code)</span><br><span class="line">            Else</span><br><span class="line">                __Res .= <span class="string">&quot;%&quot;</span> . SubStr(__Code + <span class="number">0</span>x100, -<span class="number">1</span>)</span><br><span class="line"><span class="built_in">        SetFormat,</span> IntegerFast, <span class="variable">%f%</span></span><br><span class="line"><span class="built_in">        Run %</span>__UrlA%<span class="variable">%__Res%</span><span class="variable">%__UrlB%</span></span><br><span class="line">        __Res:=<span class="string">&quot;&quot;</span></span><br><span class="line">        __Var:=<span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    _keyWord:=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">Return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">+S::</span></span><br><span class="line">&#123;</span><br><span class="line">    ClipSaved := <span class="built_in">ClipboardAll</span></span><br><span class="line">    FilePath := <span class="string">&quot;C:\Users\DELL\Desktop\picture.docx&quot;</span> </span><br><span class="line">    if FileExist(FilePath)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="built_in">        Run,</span> % <span class="string">&quot;winword.exe &quot;</span> . FilePath</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line"><span class="built_in">        MsgBox,</span> The file path is invalid <span class="literal">or</span> the file does <span class="literal">not</span> exist.</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="built_in">    WinWait,</span> <span class="keyword">ahk_class</span> OpusApp, , <span class="number">10</span></span><br><span class="line"><span class="built_in"></span></span><br><span class="line"><span class="built_in">    WinActivate,</span> <span class="keyword">ahk_class</span> OpusApp</span><br><span class="line"><span class="built_in"></span></span><br><span class="line"><span class="built_in">    WinWaitActive,</span> <span class="keyword">ahk_class</span> OpusApp, , <span class="number">10</span> </span><br><span class="line">    Send ^v</span><br><span class="line">    <span class="built_in">Clipboard</span> := ClipSaved</span><br><span class="line">    ClipSaved := <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">made by Pirrow</span></span><br><span class="line"><span class="comment">welcome to my website:</span></span><br><span class="line"><span class="comment">https://sigma-pirrow.github.io/</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p><h1 class="custom-title">四、GitHub开源链接</h1><br><a href="https://github.com/Sigma-Pirrow/-HK-Quick-word-search-tool-based-on-HK">https://github.com/Sigma-Pirrow/-HK-Quick-word-search-tool-based-on-HK</a></p><p>撰写不易，感谢支持！！！pirrow爱你！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【Pirrow】学习总结，如何发文</title>
      <link href="/posts/9fb9262a.html"/>
      <url>/posts/9fb9262a.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p> 首先创建文件夹<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 文件夹名字</span><br></pre></td></tr></table></figure><br>然后就是用css写啦<br>一开始不太会，其实还是很简单的</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
